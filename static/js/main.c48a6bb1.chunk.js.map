{"version":3,"sources":["components/Header/Header.js","components/BioInfo/BioInfo.js","components/IdeaSources/IdeaSources.js","components/ChartsNavigation/ChartsNavigation.js","containers/AsideContainer/AsideContainer.js","components/Displayed/DisplayedInfo/DisplayedInfo.js","components/Displayed/DisplayedCharts/Charts/BarChart.js","components/Displayed/DisplayedCharts/Charts/RadarChart.js","components/Displayed/DisplayedCharts/Charts/PolarChart.js","components/Displayed/DisplayedCharts/Charts/DoughnutChart.js","components/Displayed/DisplayedCharts/DisplayedCharts.js","containers/MainContainer/MainContainer.js","containers/DataDashboard/DataDashboard.js","App.js","serviceWorker.js","index.js","components/Header/Header.module.css","components/BioInfo/BioInfo.module.css","components/IdeaSources/IdeaSources.module.css","components/ChartsNavigation/ChartsNavigation.module.css","containers/AsideContainer/AsideContainer.module.css","containers/MainContainer/MainContainer.module.css","components/Displayed/DisplayedInfo/DisplayedInfo.module.css","components/Displayed/DisplayedCharts/DisplayedCharts.module.css","containers/DataDashboard/DataDashboard.module.css"],"names":["header","className","classes","Header","bioInfo","Bio","ideaSources","Idea","ChartsNavigation","state","navigationItems","title","pathName","variants","hoverPosition","y","tapPosition","Navigation","ul","this","map","item","id","li","key","whileHover","whileTap","to","exact","Component","asideContainer","div","Aside","initial","opacity","x","animate","transition","type","stiffness","delay","BioInfo","IdeaSources","displayedInfo","DisplayedInfo","hidden","visible","duration","exit","barChart","props","data","options","radarChart","polarChart","doughnutChart","DisplayedCharts","authors","songsNumberByAuthor","author","songsByAuthors","songsNumber","genres","textGenre","genre","genreNumber","number","sourceType","sourcesOfText","sourceNumber","relationType","genreSourceRelation","relation","relationNumber","barData","barOptions","radarData","radarOptions","polarData","polarOptions","doughnutData","doughnutOptions","getProperChartType","componentType","getDataBackgroundColors","getTitleHandler","fontSize","fontColor","display","text","getTooltipHandler","bcgColor","borderLabelColor","bcgLabelColor","labelColor","backgroundColor","callbacks","borderColor","labelTextColor","getLegendHandler","legendFontSize","legendTextColor","labels","usePointStyle","getChartPropertiesHandler","bar_width","tick_labels_padding","font_size_title","font_size_legend","font_color","getBackgroundColor","opacityValue","getLabelColors","label_color","getBarDataHandler","setState","datasets","label","barThickness","legend","tooltips","scales","xAxes","gridLines","offsetGridLines","color","ticks","labelOffset","padding","yAxes","beginAtZero","getRadarDataHandler","pointRadius","pointHoverRadius","pointLabelFontColor","borderWidth","fill","tension","scale","pointLabels","backdropColor","angleLines","lineWidth","scaleLabel","getPolarDataHandler","hoverBorderWidth","getPieDataHandler","cutoutPercentage","getChartHandler","prevProps","getMatchParamHandler","properProps","Object","keys","match","params","propFn","propsValue","bar","radar","polar","pie","getChartFactoryHandler","BarChart","RadarChart","PolarChart","DoughnutChart","getChartDataHandler","getRenderedChart","mainContainer","Main","path","component","dataDashboard","Dashboard","AsideContainer","MainContainer","App","basename","process","DataDashboard","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c48a6bb1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst header = () => (\r\n  <div className={classes.Header}>\r\n    <h2>Concept</h2>\r\n  </div>\r\n);\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport classes from \"./BioInfo.module.css\";\r\n\r\nconst bioInfo = () => (\r\n  <div className={classes.Bio}>\r\n    <h4>Digital Humanities</h4>\r\n    <p>\r\n      This project is an experimental part of implementig data visualization\r\n      tools to the literary science.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default bioInfo;\r\n","import React from \"react\";\r\nimport classes from \"./IdeaSources.module.css\";\r\n\r\nconst ideaSources = () => (\r\n  <div className={classes.Idea}>\r\n    <h4>Sources</h4>\r\n    <p>\r\n      All data in this project comes from bibliography of Ewa Lipska - polish\r\n      contemporary female poet. Each piece of data is strictly connected with\r\n      the genre of song.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default ideaSources;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ChartsNavigation.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass ChartsNavigation extends Component {\r\n  state = {\r\n    navigationItems: [\r\n      { title: \"Home\", pathName: \"/\" },\r\n      { title: \"Bar\", pathName: \"/charts/bar/:bar\" },\r\n      { title: \"Radar\", pathName: \"/charts/radar/:radar\" },\r\n      { title: \"Polar\", pathName: \"/charts/polar/:polar\" },\r\n      { title: \"Doughnut\", pathName: \"/charts/pie/:pie\" },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const variants = {\r\n      hoverPosition: { y: -2 },\r\n      tapPosition: { y: 3 },\r\n    };\r\n\r\n    return (\r\n      <div className={classes.Navigation}>\r\n        <nav>\r\n          <motion.ul>\r\n            {this.state.navigationItems.map((item, id) => (\r\n              <motion.li\r\n                key={id}\r\n                variants={variants}\r\n                whileHover={\"hoverPosition\"}\r\n                whileTap={\"tapPosition\"}\r\n              >\r\n                <Link to={item.pathName} exact>\r\n                  {item.title}\r\n                </Link>\r\n              </motion.li>\r\n            ))}\r\n          </motion.ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsNavigation;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport BioInfo from \"../../components/BioInfo/BioInfo\";\r\nimport IdeaSources from \"../../components/IdeaSources/IdeaSources\";\r\nimport ChartsNavigation from \"../../components/ChartsNavigation/ChartsNavigation\";\r\nimport classes from \"./AsideContainer.module.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst asideContainer = () => (\r\n  <motion.div\r\n    className={classes.Aside}\r\n    initial={{ opacity: 0, x: -100 }}\r\n    animate={{ opacity: 1, x: 0 }}\r\n    transition={{ type: \"spring\", stiffness: 200, delay: 0.5 }}\r\n  >\r\n    <Header />\r\n    <BioInfo />\r\n    <IdeaSources />\r\n    <ChartsNavigation />\r\n  </motion.div>\r\n);\r\n\r\nexport default asideContainer;\r\n","import React from \"react\";\r\nimport classes from \"./DisplayedInfo.module.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst displayedInfo = () => {\r\n  const containerVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: { duration: 1.5 },\r\n    },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className={classes.DisplayedInfo}\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <h2>Ewa Lipska - songs data dashboard</h2>\r\n      <p> Please, choose a type of chart to see the data</p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default displayedInfo;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst barChart = (props) => {\r\n  const variants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { duration: 1.5 } },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Bar data={props.data} options={props.options} />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default barChart;\r\n","import React from \"react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst radarChart = (props) => {\r\n  const variants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { duration: 1.5 } },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Radar data={props.data} options={props.options} />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default radarChart;\r\n","import React from \"react\";\r\nimport { Polar } from \"react-chartjs-2\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst polarChart = (props) => {\r\n  const variants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { duration: 1.5 } },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Polar data={props.data} options={props.options} />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default polarChart;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst doughnutChart = (props) => {\r\n  const variants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1, transition: { duration: 1.5 } },\r\n    exit: { opacity: 0 },\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Doughnut data={props.data} options={props.options} />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default doughnutChart;\r\n","import React, { Component } from \"react\";\r\nimport BarChart from \"./Charts/BarChart\";\r\nimport RadarChart from \"./Charts/RadarChart\";\r\nimport PolarChart from \"./Charts/PolarChart\";\r\nimport DoughnutChart from \"./Charts/DoughnutChart\";\r\nimport data from \"../../../assets/data/songData.json\";\r\nimport classes from \"./DisplayedCharts.module.css\";\r\n\r\nclass DisplayedCharts extends Component {\r\n  state = {\r\n    authors: data.songsNumberByAuthor.map((item) => item.author),\r\n    songsByAuthors: data.songsNumberByAuthor.map((item) => item.songsNumber),\r\n    genres: data.textGenre.map((item) => item.genre),\r\n    genreNumber: data.textGenre.map((item) => item.number),\r\n    sourceType: data.sourcesOfText.map((item) => item.type),\r\n    sourceNumber: data.sourcesOfText.map((item) => item.number),\r\n    relationType: data.genreSourceRelation.map((item) => item.relation),\r\n    relationNumber: data.genreSourceRelation.map((item) => item.number),\r\n    barData: {},\r\n    barOptions: {},\r\n    radarData: {},\r\n    radarOptions: {},\r\n    polarData: {},\r\n    polarOptions: {},\r\n    doughnutData: {},\r\n    doughnutOptions: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getChartHandler();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.getMatchParamHandler(this.props) !==\r\n      this.getMatchParamHandler(prevProps)\r\n    ) {\r\n      this.getChartHandler();\r\n    }\r\n  }\r\n\r\n  getMatchParamHandler(properProps) {\r\n    return Object.keys(properProps.match.params)[0];\r\n  }\r\n\r\n  getChartFactoryHandler(propFn, propsValue, bar, radar, polar, pie) {\r\n    switch (propFn(propsValue)) {\r\n      case \"bar\":\r\n        return bar;\r\n      case \"radar\":\r\n        return radar;\r\n      case \"polar\":\r\n        return polar;\r\n      case \"pie\":\r\n        return pie;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getProperChartType = (componentType) => {\r\n    return componentType;\r\n  };\r\n\r\n  getRenderedChart() {\r\n    return this.getChartFactoryHandler(\r\n      this.getMatchParamHandler,\r\n      this.props,\r\n      this.getProperChartType(\r\n        <BarChart data={this.state.barData} options={this.state.barOptions} />\r\n      ),\r\n      this.getProperChartType(\r\n        <RadarChart\r\n          data={this.state.radarData}\r\n          options={this.state.radarOptions}\r\n        />\r\n      ),\r\n      this.getProperChartType(\r\n        <PolarChart\r\n          data={this.state.polarData}\r\n          options={this.state.polarOptions}\r\n        />\r\n      ),\r\n      this.getProperChartType(\r\n        <DoughnutChart\r\n          data={this.state.doughnutData}\r\n          options={this.state.doughnutOptions}\r\n        />\r\n      )\r\n    );\r\n  }\r\n\r\n  getChartDataHandler(propFn, propsValue, bar, radar, polar, pie) {\r\n    switch (propFn(propsValue)) {\r\n      case \"bar\":\r\n        bar();\r\n        break;\r\n      case \"radar\":\r\n        radar();\r\n        break;\r\n      case \"polar\":\r\n        polar();\r\n        break;\r\n      case \"pie\":\r\n        pie();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getChartHandler() {\r\n    this.getChartDataHandler(\r\n      this.getMatchParamHandler,\r\n      this.props,\r\n      this.getBarDataHandler,\r\n      this.getRadarDataHandler,\r\n      this.getPolarDataHandler,\r\n      this.getPieDataHandler\r\n    );\r\n  }\r\n\r\n  getDataBackgroundColors = () => {\r\n    return [\r\n      \"hsla(357, 100%, 17%, 0.5)\",\r\n      \"hsla(126, 72%, 29%, 0.5)\",\r\n      \"hsla(37, 100%, 6%, 0.5)\",\r\n      \"hsla(29, 100%, 50%, 0.5)\",\r\n      \"hsla(240, 16%, 44%, 0.5)\",\r\n      \"hsla(46, 74%, 92%, 0.5)\",\r\n      \"hsla(300, 62%, 68%, 0.5)\",\r\n    ];\r\n  };\r\n\r\n  getTitleHandler = (title, fontSize, fontColor) => {\r\n    return {\r\n      display: true,\r\n      text: title,\r\n      fontSize: fontSize,\r\n      fontColor: fontColor,\r\n    };\r\n  };\r\n\r\n  getTooltipHandler = (\r\n    bcgColor,\r\n    borderLabelColor,\r\n    bcgLabelColor,\r\n    labelColor\r\n  ) => {\r\n    return {\r\n      backgroundColor: bcgColor,\r\n      callbacks: {\r\n        labelColor: () => {\r\n          return {\r\n            borderColor: borderLabelColor,\r\n            backgroundColor: bcgLabelColor,\r\n          };\r\n        },\r\n        labelTextColor: () => labelColor,\r\n      },\r\n    };\r\n  };\r\n\r\n  getLegendHandler = (legendFontSize, legendTextColor) => {\r\n    return {\r\n      display: true,\r\n      labels: {\r\n        fontSize: legendFontSize,\r\n        fontColor: legendTextColor,\r\n        usePointStyle: true,\r\n      },\r\n    };\r\n  };\r\n\r\n  getChartPropertiesHandler = () => {\r\n    return {\r\n      bar_width: 100,\r\n      tick_labels_padding: 15,\r\n      font_size_title: 20,\r\n      font_size_legend: 15,\r\n      font_color: \"#E8E9F3\",\r\n      getBackgroundColor: (opacityValue) =>\r\n        `hsla(267, 73%, 3%, ${opacityValue})`,\r\n      getLabelColors: (opacityValue) => `hsla(357, 100%, 17%, ${opacityValue})`,\r\n      label_color: \"#2EC4B6\",\r\n    };\r\n  };\r\n\r\n  getBarDataHandler = () => {\r\n    const {\r\n      bar_width,\r\n      tick_labels_padding,\r\n      font_size_title,\r\n      font_size_legend,\r\n      font_color,\r\n      getBackgroundColor,\r\n      getLabelColors,\r\n      label_color,\r\n    } = this.getChartPropertiesHandler();\r\n\r\n    this.setState({\r\n      barData: {\r\n        labels: this.state.relationType,\r\n        datasets: [\r\n          {\r\n            label: \"genre-source text's relation\",\r\n            barThickness: bar_width,\r\n            data: this.state.relationNumber,\r\n            backgroundColor: this.getDataBackgroundColors(),\r\n          },\r\n        ],\r\n      },\r\n      barOptions: {\r\n        title: this.getTitleHandler(\r\n          \"Genre of text related to the source of text\",\r\n          font_size_title,\r\n          font_color\r\n        ),\r\n        legend: this.getLegendHandler(font_size_legend, font_color),\r\n        tooltips: this.getTooltipHandler(\r\n          getBackgroundColor(0.8),\r\n          getLabelColors(0.7),\r\n          getLabelColors(0.5),\r\n          label_color\r\n        ),\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                offsetGridLines: true,\r\n                color: getBackgroundColor(0.2),\r\n              },\r\n              ticks: {\r\n                fontColor: font_color,\r\n                labelOffset: bar_width / 2,\r\n                padding: tick_labels_padding,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                beginAtZero: true,\r\n                color: getBackgroundColor(0.2),\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                fontColor: font_color,\r\n                padding: tick_labels_padding,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  getRadarDataHandler = () => {\r\n    const {\r\n      font_size_title,\r\n      font_size_legend,\r\n      font_color,\r\n      getBackgroundColor,\r\n      getLabelColors,\r\n      label_color,\r\n    } = this.getChartPropertiesHandler();\r\n\r\n    this.setState({\r\n      radarData: {\r\n        labels: this.state.authors,\r\n        datasets: [\r\n          {\r\n            label: \"number of songs\",\r\n            data: this.state.songsByAuthors,\r\n            backgroundColor: this.getDataBackgroundColors(),\r\n            pointRadius: 7,\r\n            pointHoverRadius: 12,\r\n            pointLabelFontColor: font_color,\r\n            borderWidth: 4,\r\n            borderColor: getBackgroundColor(0.8),\r\n            fill: false,\r\n            tension: 0.5,\r\n          },\r\n        ],\r\n      },\r\n      radarOptions: {\r\n        scale: {\r\n          pointLabels: {\r\n            fontColor: font_color,\r\n          },\r\n          ticks: {\r\n            fontColor: font_color,\r\n            backdropColor: getBackgroundColor(0.9),\r\n          },\r\n          angleLines: {\r\n            color: getBackgroundColor(0.5),\r\n          },\r\n          gridLines: {\r\n            lineWidth: 2,\r\n            color: getBackgroundColor(0.4),\r\n            offsetGridLines: true,\r\n          },\r\n          scaleLabel: {\r\n            fontColor: font_color,\r\n          },\r\n        },\r\n        title: this.getTitleHandler(\r\n          \"Number of songs (by authors)\",\r\n          font_size_title,\r\n          font_color\r\n        ),\r\n        legend: this.getLegendHandler(font_size_legend, font_color),\r\n        tooltips: this.getTooltipHandler(\r\n          getBackgroundColor(0.8),\r\n          getLabelColors(0.7),\r\n          getLabelColors(0.5),\r\n          label_color\r\n        ),\r\n      },\r\n    });\r\n  };\r\n\r\n  getPolarDataHandler = () => {\r\n    const {\r\n      font_size_title,\r\n      font_size_legend,\r\n      font_color,\r\n      getBackgroundColor,\r\n      getLabelColors,\r\n      label_color,\r\n    } = this.getChartPropertiesHandler();\r\n\r\n    this.setState({\r\n      polarData: {\r\n        labels: this.state.genres,\r\n        datasets: [\r\n          {\r\n            data: this.state.genreNumber,\r\n            backgroundColor: this.getDataBackgroundColors(),\r\n            borderColor: font_color,\r\n            borderWidth: 2,\r\n            hoverBorderWidth: 5,\r\n          },\r\n        ],\r\n      },\r\n      polarOptions: {\r\n        title: this.getTitleHandler(\"Genres\", font_size_title, font_color),\r\n        tooltips: this.getTooltipHandler(\r\n          getBackgroundColor(0.8),\r\n          getLabelColors(0.7),\r\n          getLabelColors(0.5),\r\n          label_color\r\n        ),\r\n        legend: this.getLegendHandler(font_size_legend, font_color),\r\n        scale: {\r\n          ticks: {\r\n            fontColor: font_color,\r\n            backdropColor: getBackgroundColor(0.9),\r\n          },\r\n          gridLines: {\r\n            lineWidth: 2,\r\n            color: getBackgroundColor(0.3),\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  getPieDataHandler = () => {\r\n    const {\r\n      font_size_title,\r\n      font_size_legend,\r\n      font_color,\r\n      getBackgroundColor,\r\n      getLabelColors,\r\n      label_color,\r\n    } = this.getChartPropertiesHandler();\r\n\r\n    this.setState({\r\n      doughnutData: {\r\n        labels: this.state.sourceType,\r\n        datasets: [\r\n          {\r\n            data: this.state.sourceNumber,\r\n            backgroundColor: this.getDataBackgroundColors(),\r\n            borderColor: font_color,\r\n            borderWidth: 2,\r\n            hoverBorderWidth: 5,\r\n          },\r\n        ],\r\n      },\r\n      doughnutOptions: {\r\n        cutoutPercentage: 70,\r\n        title: this.getTitleHandler(\r\n          \"Type of source\",\r\n          font_size_title,\r\n          font_color\r\n        ),\r\n        tooltips: this.getTooltipHandler(\r\n          getBackgroundColor(0.8),\r\n          getLabelColors(0.7),\r\n          getLabelColors(0.5),\r\n          label_color\r\n        ),\r\n        legend: this.getLegendHandler(font_size_legend, font_color),\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.DisplayedCharts}>{this.getRenderedChart()}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayedCharts;\r\n","import React from \"react\";\r\nimport classes from \"./MainContainer.module.css\";\r\nimport DisplayedInfo from \"../../components/Displayed/DisplayedInfo/DisplayedInfo\";\r\nimport DisplayedCharts from \"../../components/Displayed/DisplayedCharts/DisplayedCharts\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst mainContainer = () => {\r\n  return (\r\n    <motion.div\r\n      className={classes.Main}\r\n      initial={{ opacity: 0, x: 500 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ type: \"spring\", stiffness: 100, delay: 1 }}\r\n    >\r\n      <Switch>\r\n        <Route path=\"/\" exact component={DisplayedInfo} />\r\n        <Route path=\"/charts/bar/:bar\" exact component={DisplayedCharts} />\r\n        <Route path=\"/charts/radar/:radar\" component={DisplayedCharts} />\r\n        <Route path=\"/charts/polar/:polar\" component={DisplayedCharts} />\r\n        <Route path=\"/charts/pie/:pie\" component={DisplayedCharts} />\r\n      </Switch>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default mainContainer;\r\n","import React from \"react\";\r\nimport AsideContainer from \"../AsideContainer/AsideContainer\";\r\nimport MainContainer from \"../MainContainer/MainContainer\";\r\nimport classes from \"./DataDashboard.module.css\";\r\n\r\nconst dataDashboard = () => (\r\n  <div className={classes.Dashboard}>\r\n    <AsideContainer />\r\n    <MainContainer />\r\n  </div>\r\n);\r\n\r\nexport default dataDashboard;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DataDashboard from \"./containers/DataDashboard/DataDashboard\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <DataDashboard />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1DuFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"BioInfo_Bio__GfnC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Idea\":\"IdeaSources_Idea__3f01c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"ChartsNavigation_Navigation__1jGzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Aside\":\"AsideContainer_Aside__3E_Mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"MainContainer_Main__1no7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayedInfo\":\"DisplayedInfo_DisplayedInfo__3OawU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayedCharts\":\"DisplayedCharts_DisplayedCharts__OXnyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"DataDashboard_Dashboard__3o7bj\"};"],"sourceRoot":""}